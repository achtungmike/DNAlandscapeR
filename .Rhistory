library(diffloop)
x <- seq_along(y)
y2 <- rep(y, each=2)
y2 <- y2[-length(y2)]
x2 <- rep(x, each=2)[-1]
x3 <- c(min(x2), x2, max(x2))
y3 <- c(0, y2, 0)
# because polygon() is dumb and wants a pre-existing plot
plot(x, y, ylim=c(0, max(y)), type="n")
polygon(x3, y3, border=NA, col="grey")
lines(x2, y2)
set.seed(1);y = abs(rnorm(10))
x <- seq_along(y)
y2 <- rep(y, each=2)
y2 <- y2[-length(y2)]
x2 <- rep(x, each=2)[-1]
x3 <- c(min(x2), x2, max(x2))
y3 <- c(0, y2, 0)
# because polygon() is dumb and wants a pre-existing plot
plot(x, y, ylim=c(0, max(y)), type="n")
polygon(x3, y3, border=NA, col="grey")
lines(x2, y2)
x
y2
x
y
x3
?polygon
N <- 100
chr <- rep("dummy", N)
pos <- round(200*sort(runif(N) + 3*rbinom(N, 1, 0.5)))
meth <- sin(pos * pi/90) + rnorm(N, sd=0.1)
# Group CpGs into clusters of 'closely' spaced CpGs. Smooth only within clusters, not
# between clusters.
cluster_id <- clusterMaker(chr=chr, pos=pos, maxGap = 100)
cluster_id
smooth <- locfitByCluster(x=pos, y=meth, cluster=cluster_id, bpSpan=50)
plot(pos, smooth$fitted, type="l")
points(pos, meth)
library(bumphunter)
N <- 100
chr <- rep("dummy", N)
pos <- round(200*sort(runif(N) + 3*rbinom(N, 1, 0.5)))
meth <- sin(pos * pi/90) + rnorm(N, sd=0.1)
# Group CpGs into clusters of 'closely' spaced CpGs. Smooth only within clusters, not
# between clusters.
cluster_id <- clusterMaker(chr=chr, pos=pos, maxGap = 100)
cluster_id
smooth <- locfitByCluster(x=pos, y=meth, cluster=cluster_id, bpSpan=50)
plot(pos, smooth$fitted, type="l")
points(pos, meth)
polygon(pos, meth, border=NA, col="black")
pos
methy
methyl
meth
polygon(pos, abs(meth), border=NA, col="black")
cluster_id <- clusterMaker(chr=chr, pos=pos, maxGap = 100)
cluster_id
smooth <- locfitByCluster(x=pos, y=abs(meth), cluster=cluster_id, bpSpan=50)
plot(pos, smooth$fitted, type="l")
points(pos, meth)
polygon(pos, abs(meth), border=NA, col="black")
xx <- c(pos, rev(pos))
yy <- c(meth, rev(meth))
# Group CpGs into clusters of 'closely' spaced CpGs. Smooth only within clusters, not
# between clusters.
cluster_id <- clusterMaker(chr=chr, pos=pos, maxGap = 100)
cluster_id
smooth <- locfitByCluster(x=pos, y=meth, cluster=cluster_id, bpSpan=50)
plot(pos, smooth$fitted, type="l")
points(pos, meth)
polygon(xx, yy, border=NA, col="black")
xx
yy
meth <- abs(sin(pos * pi/90) + rnorm(N, sd=0.1))
xx <- c(pos, rev(pos))
yy <- c(meth, rev(meth))
# Group CpGs into clusters of 'closely' spaced CpGs. Smooth only within clusters, not
# between clusters.
cluster_id <- clusterMaker(chr=chr, pos=pos, maxGap = 100)
cluster_id
smooth <- locfitByCluster(x=pos, y=meth, cluster=cluster_id, bpSpan=50)
plot(pos, smooth$fitted, type="l")
points(pos, meth)
polygon(xx, yy, border=NA, col="black")
polygon(pos, meth, border=NA, col="black")
install.package("heR.Misc")
install.packages("heR.Misc")
xx <- c(pos, rev(pos))
yy <- c(meth, rev(meth))
# Group CpGs into clusters of 'closely' spaced CpGs. Smooth only within clusters, not
# between clusters.
cluster_id <- clusterMaker(chr=chr, pos=pos, maxGap = 100)
cluster_id
smooth <- locfitByCluster(x=pos, y=meth, cluster=cluster_id, bpSpan=50)
plot(pos, smooth$fitted, type="l")
points(pos, meth)
polygon(cbind(c(min(pos), pos, max(pos)), c(min(meth), meth, min(meth))), border=NA, col="black")
rsconnect::deployApp()
setwd("~/Desktop/Research/DNAlandscapeR")
shiny::runApp()
rsconnect::deployApp()
rsconnect::deployApp()
shiny::runApp()
shiny::runApp()
