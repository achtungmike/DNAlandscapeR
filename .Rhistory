head(a)
esc_anno <- vf_anno[,c(1,2,3,4)]
library(diffloop)
load("/Users/lareauc/Desktop/Research/AryeeResearch/sarah-qual/output/valid_full-v1.0.rda")
ctcf <- rmchr(padGRanges(bedToGRanges("/Users/lareauc/Desktop/Research/AryeeResearch/sarah-qual/input/CTCF-np_peaks.narrowPeak"), pad = 1000))
h3k27ac <- rmchr(padGRanges(bedToGRanges("/Users/lareauc/Desktop/Research/AryeeResearch/sarah-qual/input/H3K27ac-np_peaks.narrowPeak"), pad = 1000))
promoter <- padGRanges(getHumanTSS(), pad = 1000)
vf_anno <- annotateLoops(valid_full, ctcf, h3k27ac, promoter)
esc_anno <- vf_anno[,c(1,2,3,4)]
esc_anno@colData$groups <- c("naive", "naive", "primed", "primed")
esc_res <- quickAssoc(esc_anno)
t <- topLoops(esc_res, FDR = 0.01)
head(t)
t
sdf <- summary(t)
sdf
sdf
write.table(format(sdf, digits = 3), row.names = FALSE, quote = FALSE, sep = "\t")
write.table(format(sdf, digits = 3), file = "esc-differential-loops.txt", row.names = FALSE, quote = FALSE, sep = "\t")
library(rtracklayer)
library(GenomeInfoDb)
si <- Seqinfo(genome="hg19")
setwd("~/Desktop/Research/DNAlandscapeR")
wigToBigWig("/Users/lareauc/Downloads/GSM1689152_20150124_3461.2844.rpm.WIG.gz", seqinfo = si, dest = "data/tracks/Jurkat-CTCF.bw", clip = TRUE)
wigToBigWig("/Users/lareauc/Downloads/GSM1705262_20150312_3568.4198.rpm.WIG.gz", seqinfo = si, dest = "data/tracks/Primed-R1-CTCF.bw", clip = TRUE)
wigToBigWig("/Users/lareauc/Downloads/GSM1705253_20150312_3569.4202.rpm.WIG.gz", seqinfo = si, dest = "data/tracks/Naive-R1-CTCF.bw", clip = TRUE)
shiny::runApp()
runApp()
runApp()
runApp()
?par
runApp()
runApp()
i
dynamic.val
c.full
c.full[[1]]
x<- readRDS(c.full[[1]])
chr1reg <- GRanges(seqnames=c("1"),ranges=IRanges(start=c(150583052),end=c(152614119)))
library(diffloop)
objReg <- subsetRegion(x, chr1reg)
objReg
if(max(objReg@counts) > mc) mc <- max(objReg@counts)
mc <- 1
if(max(objReg@counts) > mc) mc <- max(objReg@counts)
mc
valu_sample <- sample
sample
c.full[[1]]
file <- c.full[[1]]
sample <- basename(file_path_sans_ext(file))
sample
valu_sample <- sample
valu_sample
i <- 1
names(valu_sample) <- as.character(i)
valu_sample
valu_object <- objReg
names(valu_object) <- as.character(i)
chia_pet_samples <- c(chia_pet_samples, valu_sample)
chia_pet_samples <- list()
chia_pet_samples <- c(chia_pet_samples, valu_sample)
chia_pet_samples)
chia_pet_samples
chia_pet_samples[1]
chia_pet_samples[1]
chia_pet_samples[[1]]
map_chia_pet.indices <- data.frame() #maps i to order in vector of subsetted objects
j
j <- 1
map_chia_pet.indices[j] <- i
i
j
map_chia_pet.indices <- c() #maps i to order in vector of subsetted objects
map_chia_pet.indices[j] <- i
map_chia_pet.indices
i <- 8
map_chia_pet.indices[j] <- i
Position(map_chia_pet.indices, 8)
whereis(map_chia_pet.indices, 8)
match(map_chia_pet.indices, 8)
runApp()
runApp()
runApp()
input
runApp()
runApp()
runApp()
runApp()
runApp()
chia_pet_objects <- append(chia_pet_objects, objReg)
runApp()
runApp()
runApp()
str(x)
xx <- c()
xx <- append(xx, x)
str(xx)
str(xx[1])
str(xx[[1]])
runApp()
print(is.null(objReg))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
x <- c(3,4)
match(x, 4)
which(x, 4)
which(x == 4)
runApp()
runApp()
chr1reg
chr1reg$seqnames
seqnames(chr1reg)
list(chr1reg)
chrNames(chr1reg)
chrNames(chr1reg)
library(GenomicRanges)
chrNames(chr1reg)
data.frame(chr1reg)
data.frame(chr1reg)$seqnames
data.frame(chr1reg, drop = TRUE)$seqnames
as.integer(data.frame(chr1reg)$seqnames)
runApp()
runApp()
names(valu_object) <- as.character(i)chr8reg <- GRanges(seqnames=c("8"),ranges=IRanges(start=c(39378085),end=c(39529447)))
chr8reg <- GRanges(seqnames=c("8"),ranges=IRanges(start=c(39378085),end=c(39529447)))
as.data.frame(chr8reg <- GRanges(seqnames=c("8"),ranges=IRanges(start=c(39378085),end=c(39529447))))[1,1]
as.integer(as.data.frame(chr8reg <- GRanges(seqnames=c("8"),ranges=IRanges(start=c(39378085),end=c(39529447))))[1,1])
as.integer(as.data.frame(chr8reg <- GRanges(seqnames=c("8"),ranges=IRanges(start=c(39378085),end=c(39529447))))[1,1], drop = TRUE)
as.data.frame(chr8reg <- GRanges(seqnames=c("8"),ranges=IRanges(start=c(39378085),end=c(39529447))))[1,1] == 8
runApp()
runApp()
